---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU54alZ5ZkFoejd2TFh5WlFqOU9sWGt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeU1UQTVOVFl6TmxvWERUSTJNVEF5TURBNQpOVFl6Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4bG9sZ2YybExlNWZlY2k5RyszbkMvV0x4ZkdQcE5QNGJFRVlOZlNVdUVsUGxSQnoKbzRiM0JaTVVQdjB5MWJFMm9rbmJXK1NlRVZCMUhNZnBwakFrSzZ3eWhEb2I4Q0lMY29vN3hvVXhlNzA2dE9yKwp4K042MTJCSXlmTzhIdUpJbmtFS3lPcG1JT1FPejdvdjE1QkZ4UTJZU3QxTDZKaTQrc3RWU3FqT1E2N2I2SjB4CmZpU05iVFVVN0ZwNjh5c0FwdzJNVDRYSzRqRDNoa2ZJSFdyRVd6Rnh2YzJ5bkQ1Q0RrdEhzeEwvQWFkWlVIQ3YKZDEzVWtMdk1idDI3RlM1VGNYYW9RRHd6cFpIaTdwMmJJSkNpMWRTaUNvMW42TFVYaVFGYWFKY28xQkRDcEZEMQprelZ3L05rQkVqVzNBRVdLcWpvOHFpMXpoUk42VSticUFveDRHd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUEduWWRWTlNBN2ZXb1hJVWZVQjRpSFo4dXB3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmM2Y0NadG0xYkJrOHg5cFp0bEJ6QUN3Nk1nYXJqN0NVbllXbGxLM2N3cWRBNUNYeFR6dW1RCmxNdUlOT1o2ZEl4VlpkQ054QXViUnJ2bUt0bDkveWtvTzRBVDFTdHlYRDBrRm1BRUd2NGl5Mk55M21ZeThzdXcKM0QrZld2NytnTlNyNGZnWEJqYWdqZVVBOVh1WWt3OE1tWUZERDljSFEwblVuck1Fa1VaZFhGVlZwb3EvYUdSUQpXYUlXZ1VsdUtkYWRmKy9FVnh6WWc0SWpZcWcwRTN1R1I5bHB2aEEyYzJmbmEwRGNycG1HT3VvSlB3YUlGUWhlCnQxZWpHOFpIa043VVFQbHp5RDJlMlJ0bFFhTXNQalloUE5wVVQ3eTBDcDgycXZSMG92OWQ5QXoxd1EwRUU2elQKZEZEVW15Y1ZSei9ZTUpnZSs2dVl5UWViUWxiK3cxaVcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeGxvbGdmMmxMZTVmZWNpOUcrM25DL1dMeGZHUHBOUDRiRUVZTmZTVXVFbFBsUkJ6Cm80YjNCWk1VUHYweTFiRTJva25iVytTZUVWQjFITWZwcGpBa0s2d3loRG9iOENJTGNvbzd4b1V4ZTcwNnRPcisKeCtONjEyQkl5Zk84SHVKSW5rRUt5T3BtSU9RT3o3b3YxNUJGeFEyWVN0MUw2Smk0K3N0VlNxak9RNjdiNkoweApmaVNOYlRVVTdGcDY4eXNBcHcyTVQ0WEs0akQzaGtmSUhXckVXekZ4dmMyeW5ENUNEa3RIc3hML0FhZFpVSEN2CmQxM1VrTHZNYnQyN0ZTNVRjWGFvUUR3enBaSGk3cDJiSUpDaTFkU2lDbzFuNkxVWGlRRmFhSmNvMUJEQ3BGRDEKa3pWdy9Oa0JFalczQUVXS3FqbzhxaTF6aFJONlUrYnFBb3g0R3dJREFRQUJBb0lCQUIzaVl4aE1zT0JVczhuVApkcnFJZzNFSDA4RkUvZEZscGw0WkNKN0lkTWUzTStoUGpEeXREdmFtRER6WlJSbHhFN3dyeUlMMTFPTGk3bUloCnRKQTNYSnUvMi9TVUZMVi9TNTQ4T1hsVmcva1NyNCttZ0RCNWszNXpvVVBjRnhISUlnekYyK3dkZExtcjRwZGwKZytQRWR0NlRoOGh2d3dvT1NJQnd0aThEYytBNmFqWFVVMTFJRTEzTytHUTB5N0FZRWxicmVwWTVIeUNNdFZaZQo4Q3dSRWlaTUhWK1Q3NWpESlcvcnljdzNpNGZ1OVQ4V3pxdVdtODE5azNZSStwRTVuMkpXVXVCYkRqVkRrUEFEClVvSnV4RGJUMkZZZmV1N2RCTVBabzZ3VGlKeDR6d3BDNUFDR0hibUJ2MUVkdHNJT0NZVDBoc0gvaXR1b0ZHZnQKZzdMUm1aRUNnWUVBNTc2c3hJUGFDSklhR0w0QURhL1JRTjcrUlhQU3RWYkVSYzV6VldhQTd0OGMrZmxHVFRzUgpXRTI3TTdaZklCNEt3aldDTW83TCtaZFk0UnBkUDVBOWpQVkpRdkhZMFB1NkpKWFlVeklmTnNSYng0czI2RzkrCkM3TjdlNUhQVUhpUWI5bklhT1dIb1dkYmN2VW9tRVFNc1pNRUxpNDJGR0N0Q0pYOTU4MEZQdWNDZ1lFQTJ4ekIKS0FYZWNKV1BzNmphRjY2VzdNTzFiWDhtSEpydTJWdWdvZTFHZllHRWlBNi91dXRsci9XN2lkbUM0REx2UkFqdgo1T3FCeSs4aXN6d2VrVmdpWWhrWDJGbm14R1lUaG5XeXREVWpVSERoZHFEeGtGNW9lTnZ4T0NOSThUSHVEc2lkCjJydWYyeHJzUFoxY2tBcHl1alpTYllTUThHZDVYb0VKVXExR21xMENnWUVBeG4rZExtb2RySyt3S0xjK0Juc3QKU2xwM0EzaFU2RHljdTRvOVljMzk3QjB4amJBRmxvdGNyUDFQdHRpa0hEZC9VYUJSbUFxV0RvQ2pnWlI2Z01LRQo1aU1Ia0k3ay93UlBDWjFNQU43eXU0OXZhYmtGM0F2N3Mvd1ZiZCtUNnNLS1BUUVdwRHJPZE9LNkF2cVl2ZXV6Cno3bzBuM1czbnJhOEg1bVNOU1Y0TThzQ2dZRUFoTzg0SFNFYWFISEU0bm94L3lZMGVPYnYzc1BDaXA1UkJOdzcKWTZLQ0hza0NjRTJLYzB3M3dINjB6aGlCOTZYUFZoYVovT2R0NGgxdWp4R05kaDdqbFdLbC9lUGxSd2lyRmV1NApoTzZzUXpTSkJhRDFqZUpKUGZJcXNpVnVMcTlkUCtqbEpIeXFxcEwxK3hmS3ZiVXBEK0svTmFTMURyV29nL2FECmduNlFGRzBDZ1lFQWhMNWlhNnhCRHJQcG9jcEdYcUp4cGppOEtnVTd4UjV3LzVMVnBOODRKZDQwK0dHdlFWTkEKY0d5eGNQQjB3SzBCUnV4ajdicWxKaHRyVnFzNEdhQVdNS0RkZXh3QU12STV1S0lGQ1I3cDBhVTBRbnk0Q3IyVApMYnlnWGx0U1ZwR3ZCbGNWU1pKczNxY0cyaVovaS80eEZsODBwRWVlRVNjZE1GOCtSSTBROVRBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU54alZ5ZkFoejd2TFh5WlFqOU9sWGt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeU1UQTVOVFl6TmxvWERUSTJNVEF5TURBNQpOVFl6Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF4bG9sZ2YybExlNWZlY2k5RyszbkMvV0x4ZkdQcE5QNGJFRVlOZlNVdUVsUGxSQnoKbzRiM0JaTVVQdjB5MWJFMm9rbmJXK1NlRVZCMUhNZnBwakFrSzZ3eWhEb2I4Q0lMY29vN3hvVXhlNzA2dE9yKwp4K042MTJCSXlmTzhIdUpJbmtFS3lPcG1JT1FPejdvdjE1QkZ4UTJZU3QxTDZKaTQrc3RWU3FqT1E2N2I2SjB4CmZpU05iVFVVN0ZwNjh5c0FwdzJNVDRYSzRqRDNoa2ZJSFdyRVd6Rnh2YzJ5bkQ1Q0RrdEhzeEwvQWFkWlVIQ3YKZDEzVWtMdk1idDI3RlM1VGNYYW9RRHd6cFpIaTdwMmJJSkNpMWRTaUNvMW42TFVYaVFGYWFKY28xQkRDcEZEMQprelZ3L05rQkVqVzNBRVdLcWpvOHFpMXpoUk42VSticUFveDRHd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUEduWWRWTlNBN2ZXb1hJVWZVQjRpSFo4dXB3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmM2Y0NadG0xYkJrOHg5cFp0bEJ6QUN3Nk1nYXJqN0NVbllXbGxLM2N3cWRBNUNYeFR6dW1RCmxNdUlOT1o2ZEl4VlpkQ054QXViUnJ2bUt0bDkveWtvTzRBVDFTdHlYRDBrRm1BRUd2NGl5Mk55M21ZeThzdXcKM0QrZld2NytnTlNyNGZnWEJqYWdqZVVBOVh1WWt3OE1tWUZERDljSFEwblVuck1Fa1VaZFhGVlZwb3EvYUdSUQpXYUlXZ1VsdUtkYWRmKy9FVnh6WWc0SWpZcWcwRTN1R1I5bHB2aEEyYzJmbmEwRGNycG1HT3VvSlB3YUlGUWhlCnQxZWpHOFpIa043VVFQbHp5RDJlMlJ0bFFhTXNQalloUE5wVVQ3eTBDcDgycXZSMG92OWQ5QXoxd1EwRUU2elQKZEZEVW15Y1ZSei9ZTUpnZSs2dVl5UWViUWxiK3cxaVcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWRENDQWp5Z0F3SUJBZ0lRWkNrYnJoTWNXaHkxY3BNZTBaQWVDVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TURJeE1EazFOak0yV2hjTk1qWXhNREl3TURrMQpOak0yV2pBcE1TY3dKUVlEVlFRRERCNHFMbVJsWldSbFpTNW9kV0ppYkdVdFozSndZeTVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUN6dGxzMFBaK1JhUEhlckJCd3Y5NEQKS1MwTnB1Uk95VDg5eGVJWm10SkFDS1VCNnZmdFl1NDA4dGF2R2xVSGE3a3pKR2E2VnRqeU4wdFRKZy9zQlVsegpwbDFYbkdUenBXcmJjR3lHd1FLM3VwN294UWR3akhON20yd0lVZHAzbWFVZURrUkRaTFlya1ZBaEEzRFhPQXI5CmdqVHFhZmhqeVJmaWpxOUhSeXltd0tVckhUSnB5V3RhK1ZPWXZ1czFRc05wQXYrM0JCa0xkNGgxeUt2d0JkcXAKL1Znb25zd01yTHRwb0NINzlYbnV1ZTFzT3pFYkU0TWlqSUY0RUFXUTBDSXJiV1dyU3ZvVHJNWStyZXlBclFJbwpKWDl2MkVuUlZjaFBmZzhRWmhObTdGc2gzd0hVVk1SaXM1NHlTL2FVd1I4R0xxdHNXaFM4SkdlMy9QMnZONEFGCkFnTUJBQUdqZ1l3d2dZa3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUIKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRlBHbllkVk5TQTdmV29YSQpVZlVCNGlIWjh1cHdNQ2tHQTFVZEVRUWlNQ0NDSGlvdVpHVmxaR1ZsTG1oMVltSnNaUzFuY25CakxtTnBiR2wxCmJTNXBiekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbU05WVBuRU1KMVhLSTg0M3ExcWp4VEFrb2lLTnhxREgKZDk3UWpUMFNJbTVNMTVTQWhpUFpJYWFsOW1iTnZRTjh0amRtMkd4dkxDeVhIU3R5cWhMWDl0NFRkTGlwcWQ1cApPV3lWNFFCUW5UQi8vR1VlNWlWdWNkNVdCcGlzWE95cWhFL2RYak9Xc0hIRUg0YVpnL1V2anJSVlJ4Umc5Mk1mClEvenFNb1JGYmJLQ0xneU8xa2lDQThlOEwzQitWTnhEa0pBUFBPcGYxSU1jeXgzNUg0VVQxdVExKzhHVEI5a0sKSDJDY1FBanN0eHBjSlViYXdJdTJaMnpxN0pVVXJhN3JFUzBtdVYvbUg1cUhQUVdVUmpOWnJZdTlyRDhpM3NkLwpsTmpTYWNEZHVWWXBDNFM4S1dabmNhN09PWlZuU3RwR0J2ek5zNnVyNzhkVjRQOS9ta0pPUnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBczdaYk5EMmZrV2p4M3F3UWNML2VBeWt0RGFia1Rzay9QY1hpR1pyU1FBaWxBZXIzCjdXTHVOUExXcnhwVkIydTVNeVJtdWxiWThqZExVeVlQN0FWSmM2WmRWNXhrODZWcTIzQnNoc0VDdDdxZTZNVUgKY0l4emU1dHNDRkhhZDVtbEhnNUVRMlMySzVGUUlRTncxemdLL1lJMDZtbjRZOGtYNG82dlIwY3Nwc0NsS3gweQphY2xyV3ZsVG1MN3JOVUxEYVFML3R3UVpDM2VJZGNpcjhBWGFxZjFZS0o3TURLeTdhYUFoKy9WNTdybnRiRHN4Ckd4T0RJb3lCZUJBRmtOQWlLMjFscTByNkU2ekdQcTNzZ0swQ0tDVi9iOWhKMFZYSVQzNFBFR1lUWnV4YklkOEIKMUZURVlyT2VNa3YybE1FZkJpNnJiRm9VdkNSbnQvejlyemVBQlFJREFRQUJBb0lCQUdtK0tSZ3FFbFFiTGdaWgp0Q3JEbXJ5OVk3Y2V0a1B0Z25xMGp2K0Y2NlNsOFlHWllseVowNVB3TjRZOHRqOXhrVDJZYzZHOUxGWUpWeGNMCjFGNktGZGdvMGMrVlJJbGdrZW1nMHhyUFF1d2NzUmhCcHNrQXU0ckZ2dUYrV0UvN1pmNnpZbE5OVlN0NWkyNkIKZWNvSlBkNUEyU1g5U0p4ZVhPR0FGMzZYVUp5a3pKRUVsWERpNVYvc3pDUnQ5ZE93OG1tb2doUVMvWXZ4RHVSOQpDOGRSTkZVeHAxeG81S2NLR3dNeEw5NHlxcE1BNk1OS3kveHVkZk85WGhkR1hLb0xjZUVUNmFYRXFCUzJxMUpPCjRhMEUwc3FKRnZnRkY4MDRUQVlaQnFBZ1hKRjUvWFUrZUNMUGxtU2p3L3NyOXlIN3JhUSszaEcwNllXVmFrTHMKOWVTSE9JRUNnWUVBdzdmd3U1UTIvd09DMkRwRFhnUXdtb3ZpMnljcWtVM0gyYU85SVBvd0ZheTJhVThNaGYzUgo1NDNicGY2cmtoYy9JenBTbVJlWVhDakhnTUovMmduL0RLaVdDbGxBdjdIMEtuNGxaZHZXeGU5SEhWdUYySWlVCkRqWml4UkFya0Q1VmpyQ2pEaTdKV3J6YVc0WUdqT2ZQbGFlUkJvM3RsZ2FIcW16UkRYUkVOVkVDZ1lFQTZ4QmIKTW9OQUZyekJIUCsvam1iNHdtbDE4VTYrY25BZHU2bWtnbEI1QjV6QVJVKzJGcnowaTU4SkpjaXF5UHpIY1B1NgpERjRzNjNPOVVQckp3UkQrT2pncnhPUDdjNDdiNlozNG1aUDRxaUxVUVgxT0xvS3ZYcE1yMnJkTmo0aTU5c250CldxZ3BmQVdyaDN1cHlZMHFYYk4wV1hhUDViejJNSlFPVm50NGduVUNnWUI1aCtPRkp2RExnMnVoUnZTRUVjZjQKZjNwN3FTTm1uTXpIV1VSY2tONkE1d0ZSL1JNQ3RPeTlnem5zSm1wMVNkZ2IwT0J2VGRaL0M1ZHVYZGcwRlZiNQpqa20wM1YwMmE1TDVPK0dQRVdhWS9BN0ZyUW84dmZwcHBOM0tEbE51dXpZM1ozbW9tZWJRWUVxYTRHdDYzWXJxCkcrWVRFdGgvKzBnTXpJczNkb1hRTVFLQmdRQzJKK3lrRGpYQjZPKzFhektrUllPTUZIR0RWOFFacG14RUdzZ1MKL0ExdUtyaU1mYUxicC8zUm5LSllGMUxSZ2FHRUdtNG9XMnB2NHpiWDVDQW9idVN6ZFFmbUFjMi8xUHJ4NUtyYgpTR0d3Wm1FWmh1THBBL2ltVDJIeWtZMlhKeHNFOWFIcldOa2M5TC9oczZEMVFXR05UeDFnbnBJUU5BaUx5SS83CjBKNm9hUUtCZ0ZaVW5qdkVyM05RZzdFMzdFTG83aklHenhwczRjUW5lazhLM01mSVFVYmJaNVBkYit0RCtDZGgKSzlLTm9rQ0NUbXhKS0lHRkxOTUFXUWlWZU14OGp5Tk9NZXhDUmVnSTFHbTRWU3J6dkpmd25zenMyQm5MRHhSawozNUxNS0pkeVlmM2FsQ1grUmF0cjlQNDdJRWp0YTRHWTFlY0JuTU02MFRSV29jUVdWSGpYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9962"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: kubernetes
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "1"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  routing-mode: "native"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-bpf-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-local-redirect-policy: "true"
  ipv4-native-routing-cidr: 172.30.0.0/16

  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: "0.0.0.0:10256"
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-routes: "true"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  ipam-cilium-node-update-rate: "15s"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  # Enable L2 announcements
  enable-l2-announcements: "true"
  l2-announcements-lease-duration: "120s"
  l2-announcements-renew-deadline: "60s"
  l2-announcements-retry-period: "1s"
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: metrics
    port: 9962
    protocol: TCP
    targetPort: prometheus
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "84b1510d331a177050e693c60eabf1f3017dc385c201fe2da5eaafabe968aeb7"
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.3@sha256:e5ca22526e01469f8d10c14e2339a82a13ad70d9a359b879024715540eef4ace"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: prometheus
          containerPort: 9962
          hostPort: 9962
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - DAC_OVERRIDE
              - FOWNER
              - IPC_LOCK
              - KILL
              - NET_ADMIN
              - NET_RAW
              - SETGID
              - SETUID
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        # Check for duplicate mounts before mounting
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.3@sha256:e5ca22526e01469f8d10c14e2339a82a13ad70d9a359b879024715540eef4ace"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.3@sha256:e5ca22526e01469f8d10c14e2339a82a13ad70d9a359b879024715540eef4ace"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.3@sha256:e5ca22526e01469f8d10c14e2339a82a13ad70d9a359b879024715540eef4ace"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.3@sha256:e5ca22526e01469f8d10c14e2339a82a13ad70d9a359b879024715540eef4ace"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "84b1510d331a177050e693c60eabf1f3017dc385c201fe2da5eaafabe968aeb7"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.3@sha256:c9613277b72103ed36e9c0d16b9a17cafd507461d59340e432e3e9c23468b5e2"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "localhost"
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
