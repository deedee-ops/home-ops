---
# yamllint disable-line rule:line-length
# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
services:
  komodo-backup:
    image: public.ecr.aws/docker/library/alpine:3.22.0@sha256:8a1f59ffb675680d47db6337b49d22281a139e9d709335b492be023728e11715
    container_name: komodo-backup
    command:
      - sh
      - -c
      - |-
          apk add --no-cache curl jq

          cat <<EOF> /root/run-backup
            curl -sL -H 'Content-Type: application/json' \
                 -H "X-Api-Key: $(cat /secrets/KOMODO_BACKUPS_API_KEY)" \
                 -H "X-Api-Secret: $(cat /secrets/KOMODO_BACKUPS_API_SECRET)" \
                 --data '{"type":"ExportAllResourcesToToml","params":{"include_variables":true}}' \
                 http://komodo-core:9120/read | jq -r .toml > /backup/komodo-backup.toml
          EOF
          chmod +x /root/run-backup

          echo -e '0 * * * * /root/run-backup\n\n' > /etc/crontabs/root

          crond -f
    labels:
      komodo.skip:  # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    volumes:
      - "${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/volumes/komodo/secrets:/secrets:ro"
      - "${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/volumes/komodo/backup:/backup"

  komodo-postgres:
    image: ghcr.io/ferretdb/postgres-documentdb:17-0.103.0@sha256:175c0fc397fcee94e2a11d775fb494f448b30c5d02a77f2d38eca6c241c4ca75
    container_name: komodo-postgres
    labels:
      komodo.skip:  # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    environment:
      POSTGRES_USER_FILE: "/secrets/KOMODO_DATABASE_USERNAME"
      POSTGRES_PASSWORD_FILE: "/secrets/KOMODO_DATABASE_PASSWORD"
      POSTGRES_DB: postgres  # Do not change
    volumes:
      - "${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/volumes/komodo/secrets:/secrets:ro"
      - "${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/volumes/komodo/pgdata:/var/lib/postgresql/data"

  komodo-ferretdb:
    image: ghcr.io/ferretdb/ferretdb:2.2.0@sha256:9f47e98b9e9fd4e98e778c1e975544e1ca751d2adaf5d79f24f8b3901d8b9c5d
    container_name: komodo-ferretdb
    user: "1000:1000"
    labels:
      komodo.skip:  # Prevent Komodo from stopping with StopAllContainers
    restart: unless-stopped
    depends_on:
      - komodo-postgres
    volumes:
      - "${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/volumes/komodo/secrets:/secrets:ro"
      - "${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/volumes/komodo/state:/state"
    environment:
      FERRETDB_POSTGRESQL_URL_FILE: "/secrets/FERRETDB_POSTGRESQL_URL"
      FERRETDB_TELEMETRY: "disable"
      DO_NOT_TRACK: "true"

  komodo-core:
    image: ghcr.io/moghtech/komodo-core:1.18.1@sha256:e116e03b7b551bbc1e78805bcbf563fdf35420522f08d3bb72fce136c7b1ccbd
    container_name: komodo-core
    labels:
      komodo.skip:  # Prevent Komodo from stopping with StopAllContainers
      caddy: "*.${ROOT_DOMAIN}"
      caddy.1_@komodo: "host komodo.${ROOT_DOMAIN}"
      caddy.1_handle: "@komodo"
      caddy.1_handle.reverse_proxy: "{{upstreams 9120}}"
    restart: unless-stopped
    depends_on:
      - komodo-ferretdb
    ports:
      - 9120:9120
    logging:
      driver: local
    env_file:
      - compose.env
    networks:
      - default
      - caddy
    volumes:
      - repo-cache:/repo-cache
      - syncs:/syncs
      - "${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}/volumes/komodo/secrets:/secrets:ro"

networks:
  caddy:
    external: true

volumes:
  repo-cache:
  syncs:
