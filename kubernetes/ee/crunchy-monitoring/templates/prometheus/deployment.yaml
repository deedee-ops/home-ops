apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-prometheus
  labels:
    {{- include "prometheus.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "prometheus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "prometheus.labels" . | nindent 8 }}
        {{- with .Values.prometheus.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: prometheus
        image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
        ports:
        - containerPort: 9090        
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
        resources:
          {{- toYaml .Values.prometheus.resources | nindent 10 }}
        {{- with .Values.prometheus.containerSecurityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}  
        volumeMounts:
        - mountPath: /etc/prometheus
          name: prometheusconf
        - mountPath: /prometheus
          name: prometheusdata
        - mountPath: /etc/prometheus/alert-rules.d
          name: alertmanagerrules
      {{- if not .Values.openShift }}
      securityContext:
        fsGroup: 26
      {{- end }}
      serviceAccountName: prometheus
      volumes:
      - name: prometheusconf
        configMap:
          defaultMode: 420
          name: {{ .Release.Name }}-prometheus
      - name: prometheusdata
        persistentVolumeClaim:
          claimName: prometheusdata
      - configMap:
          defaultMode: 420
          name: alert-rules-config
        name: alertmanagerrules
