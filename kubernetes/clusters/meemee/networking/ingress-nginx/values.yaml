---
ingress-nginx:
  fullnameOverride: nginx-internal
  controller:
    hostNetwork: true
    service:
      enabled: false
    replicaCount: 1
    allowSnippetAnnotations: true
    enableAnnotationValidations: true
    ingressClassResource:
      name: internal
      default: true
      controllerValue: k8s.io/internal
    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 101
      runAsGroup: 82
      seccompProfile:
        type: RuntimeDefault
    containerSecurityContext:
      allowPrivilegeEscalation: false
      runAsNonRoot: true
      runAsUser: 101
      runAsGroup: 82
      capabilities:
        drop:
          - ALL
        add:
          - NET_BIND_SERVICE
    admissionWebhooks:
      objectSelector:
        matchExpressions:
          - key: ingress-class
            operator: In
            values:
              - internal
    resources:
      requests:
        cpu: 100m
        memory: 250Mi
      limits:
        memory: 2000Mi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    extraArgs:
      default-ssl-certificate: networking/root-domain-tls
    config:
      # never use custom-http-errors, as forwarding goes haywire
      client-body-buffer-size: 100M
      client-body-timeout: 120
      client-header-timeout: 120
      enable-brotli: "true"
      # don't enable OCSP, it requires calling external service,
      # which will be blocked by netpol and cause nginx to return 500
      # enable-ocsp: "true"
      enable-real-ip: "true"
      hide-headers: Server,X-Powered-By
      hsts-max-age: 31449600
      keep-alive-requests: 10000
      keep-alive: 120
      log-format-escape-json: "true"
      log-format-upstream: >
        {
        "time": "$time_iso8601",
        "remote_addr": "$proxy_protocol_addr",
        "x_forwarded_for": "$proxy_add_x_forwarded_for",
        "request_id": "$req_id",
        "remote_user": "$remote_user",
        "bytes_sent": $bytes_sent,
        "request_time": $request_time,
        "status": $status,
        "vhost": "$host",
        "request_proto": "$server_protocol",
        "path": "$uri",
        "request_query": "$args",
        "request_length": $request_length,
        "duration": $request_time,
        "method": "$request_method",
        "http_referrer": "$http_referer",
        "http_user_agent": "$http_user_agent"
        }
      proxy-body-size: 0
      proxy-buffer-size: 16k
      force-ssl-redirect: "true"
      ssl-protocols: TLSv1.3 TLSv1.2
      ssl-redirect: "false"
      whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
  defaultBackend:
    enabled: false
