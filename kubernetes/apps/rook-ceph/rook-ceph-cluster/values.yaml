---
rook-ceph-cluster:
  operatorNamespace: rook-ceph
  monitoring:
    enabled: true
    createPrometheusRules: true
  toolbox:
    enabled: true
  cephClusterSpec:
    cephConfig:
      global:
        bdev_enable_discard: "true"
        bdev_async_discard_threads: "1"
        device_failure_prediction_mode: local  # requires mgr module
    crashCollector:
      disable: false
    csi:
      readAffinity:
        enabled: true
    dashboard:
      enabled: true
      urlPrefix: /
      ssl: false
      prometheusEndpoint: "http://prometheus-operated.observability.svc.cluster.local:9090"
    dataDirHostPath: /var/mnt/rook-ceph
    mgr:
      count: 2
      modules:
        - name: diskprediction_local
          enabled: true
        - name: insights
          enabled: true
        - name: pg_autoscaler
          enabled: true
        - name: rook
          enabled: true
    network:
      provider: host
      connections:
        requireMsgr2: true
    resources:
      mgr:
        limits:
          cpu: "1000m"
          memory: "2Gi"
        requests:
          cpu: "500m"
          memory: "512Mi"
      mgr-sidecar:
        limits:
          cpu: "1000m"
          memory: "100Mi"
        requests:
          cpu: "100m"
          memory: "40Mi"
    storage:
      useAllNodes: true
      useAllDevices: false
      devicePathFilter: /dev/disk/by-id/ata-KINGSTON_SEDC600M960G_.*
      config:
        osdsPerDevice: "1"


  cephBlockPools:
    - name: ceph-blockpool
      spec:
        failureDomain: host
        replicated:
          size: 2
      storageClass:
        enabled: true
        name: ceph-block
        isDefault: true
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        volumeBindingMode: "Immediate"
        mountOptions:
          - discard
        parameters:
          imageFormat: "2"
          imageFeatures: layering
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
          csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/fstype: ext4
  cephBlockPoolsVolumeSnapshotClass:
    enabled: true
    name: csi-ceph-blockpool
    isDefault: false
    deletionPolicy: Delete

  cephFileSystems:
    - name: ceph-filesystem
      spec:
        metadataPool:
          replicated:
            size: 2
        dataPools:
          - failureDomain: host
            replicated:
              size: 2
            name: data0
        metadataServer:
          activeCount: 1
          activeStandby: true
          resources:
            requests:
              cpu: 1000m
              memory: 4Gi
            limits:
              memory: 4Gi
      storageClass:
        enabled: true
        isDefault: false
        name: ceph-filesystem
        pool: data0
        reclaimPolicy: Delete
        allowVolumeExpansion: true
        volumeBindingMode: "Immediate"
        parameters:
          csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
          csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
          csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
          csi.storage.k8s.io/fstype: ext4
  cephFileSystemVolumeSnapshotClass:
    enabled: true
    name: csi-ceph-filesystem
    isDefault: false
    deletionPolicy: Delete

  cephObjectStores: []
