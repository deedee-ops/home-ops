---
grafana:
  deploymentStrategy:
    type: Recreate
  admin:
    existingSecret: grafana-admin-secret
  env:
    GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
    GF_EXPLORE_ENABLED: true
    GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
    GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
    GF_SERVER_ROOT_URL: "https://grafana.<path:kubernetes/data/internal/base#ROOT_DOMAIN>"
  grafana.ini:
    analytics:
      check_for_updates: false
      check_for_plugin_updates: false
      reporting_enabled: false
    auth.anonymous:
      enabled: true
      org_id: 1
      org_name: Main Org.
      org_role: Viewer
    auth.proxy:
      enabled: true
      header_name: REMOTE-USER
      header_property: username
      auto_sign_up: true
      sync_ttl: 15
      whitelist: "172.16.0.0/12"
    news:
      news_feed_enabled: false
  datasources:
    datasources.yaml:
      apiVersion: 1
      deleteDatasources:
        - name: Alertmanager
          orgId: 1
        - name: Loki
          orgId: 1
        - name: Prometheus
          orgId: 1
      datasources:
        - name: Prometheus
          type: prometheus
          uid: prometheus
          access: proxy
          url: http://prometheus-operated.monitoring.svc.cluster.local:9090
          jsonData:
            timeInterval: 1m
          isDefault: true
        - name: Loki
          type: loki
          uid: loki
          access: proxy
          url: http://loki-headless.monitoring.svc.cluster.local:3100
          jsonData:
            maxLines: 250
        - name: Alertmanager
          type: alertmanager
          uid: alertmanager
          access: proxy
          url: http://alertmanager-operated.monitoring.svc.cluster.local:9093
          jsonData:
            implementation: prometheus
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: default
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      adguard:
        url: https://raw.githubusercontent.com/henrywhitaker3/adguard-exporter/main/grafana/dashboard.json
        datasource:
          - name: DS_PROMETHEUS
            value: Prometheus
      ceph-cluster:
        # renovate: depName="Ceph Cluster"
        gnetId: 2842
        revision: 18
        datasource: Prometheus
      ceph-osd:
        # renovate: depName="Ceph - OSD (Single)"
        gnetId: 5336
        revision: 9
        datasource: Prometheus
      ceph-pools:
        # renovate: depName="Ceph - Pools"
        gnetId: 5342
        revision: 9
        datasource: Prometheus
      cert-manager:
        # renovate: depName="cert-manager"
        gnetId: 20340
        revision: 1
        datasource:
          - name: DS_PROMETHEUS
            value: Prometheus
      cloudflared:
        # renovate: depName="Cloudflare Tunnels (cloudflared)"
        gnetId: 17457
        revision: 6
        datasource:
          - name: DS_PROMETHEUS
            value: Prometheus
      exportarr:
        url: https://raw.githubusercontent.com/onedr0p/exportarr/master/examples/grafana/dashboard2.json
        datasource:
          - name: DS_PROMETHEUS
            value: Prometheus
      external-dns:
        # renovate: depName="External-dns"
        gnetId: 15038
        revision: 3
        datasource: Prometheus
      kubernetes-api-server:
        # renovate: depName="Kubernetes / System / API Server"
        gnetId: 15761
        revision: 17
        datasource: Prometheus
      kubernetes-coredns:
        # renovate: depName="Kubernetes / System / CoreDNS"
        gnetId: 15762
        revision: 18
        datasource: Prometheus
      kubernetes-global:
        # renovate: depName="Kubernetes / Views / Global"
        gnetId: 15757
        revision: 42
        datasource: Prometheus
      kubernetes-namespaces:
        # renovate: depName="Kubernetes / Views / Namespaces"
        gnetId: 15758
        revision: 38
        datasource: Prometheus
      kubernetes-nodes:
        # renovate: depName="Kubernetes / Views / Nodes"
        gnetId: 15759
        revision: 32
        datasource: Prometheus
      kubernetes-pods:
        # renovate: depName="Kubernetes / Views / Pods"
        gnetId: 15760
        revision: 32
        datasource: Prometheus
      kubernetes-volumes:
        # renovate: depName="K8s / Storage / Volumes / Cluster"
        gnetId: 11454
        revision: 14
        datasource: Prometheus
      miniflux:
        url: https://raw.githubusercontent.com/miniflux/v2/main/contrib/grafana/dashboard.json
        datasource: Prometheus
      nginx:
        url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
        datasource: Prometheus
      nginx-request-handling-performance:
        url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
        datasource: Prometheus
      node-exporter-full:
        # renovate: depName="Node Exporter Full"
        gnetId: 1860
        revision: 37
        datasource: Prometheus
      node-feature-discovery:
        url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
        datasource: Prometheus
      omada-exporter:
        # renovate: depName="Omada Overview"
        gnetId: 16343
        revision: 2
        datasource:
          - name: DS_PROMETHEUS
            value: Prometheus
      prometheus:
        # renovate: depName="Prometheus"
        gnetId: 19105
        revision: 4
        datasource: Prometheus
      qbittorrent-exporter:
        url: https://raw.githubusercontent.com/esanchezm/prometheus-qbittorrent-exporter/master/grafana/dashboard.json
        datasource:
          - name: DS_PROMETHEUS
            value: Prometheus
      smart:
        # renovate: depName="Dashboard for smartctl_exporter"
        gnetId: 20204
        revision: 1
        datasource:
          - name: DS_PROMETHEUS
            value: Prometheus
      spegel:
        # renovate: depName="Spegel"
        gnetId: 18089
        revision: 1
        datasource:
          - name: DS_PROMETHEUS
            value: Prometheus
      synology-nas-details:
        # renovate: depName="Synology NAS Details"
        gnetId: 14284
        revision: 9
        datasource:
          - name: DS_PROMETHEUS
            value: Prometheus
      volsync:
        # removate: depNmae="VolSync Dashboard"
        gnetId: 21356
        revision: 1
        datasource:
          - name: DS_PROMETHEUS
            value: Prometheus
          - name: VAR_REPLICATIONDESTNAME
            value: .*-dst
  sidecar:
    dashboards:
      enabled: true
      searchNamespace: ALL
      label: grafana_dashboard
      folderAnnotation: grafana_folder
      provider:
        disableDelete: true
        foldersFromFilesStructure: true
    datasources:
      enabled: true
      searchNamespace: ALL
      labelValue: ""
  plugins:
    - grafana-clock-panel
    - grafana-piechart-panel
    - grafana-worldmap-panel
    - natel-discrete-panel
    - pr0ps-trackmap-panel
    - vonage-status-panel
  serviceMonitor:
    enabled: true
  ingress:
    enabled: true
    annotations:
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Monitoring
      gethomepage.dev/name: Grafana
      gethomepage.dev/icon: grafana.png
      gethomepage.dev/description: Charts for monitoring
    ingressClassName: internal
    hosts:
      - "grafana.<path:kubernetes/data/internal/base#ROOT_DOMAIN>"
    tls:
      - hosts:
          - "loki.<path:kubernetes/data/internal/base#ROOT_DOMAIN>"
  persistence:
    enabled: false
  testFramework:
    enabled: false
