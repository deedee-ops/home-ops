---
kube-image-keeper:
  cachedImagesExpiryDelay: 30
  installCRD: true
  architectures:
    - amd64

  controllers:
    replicas: 2
    podSecurityContext: &podSecurityContext
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    securityContext: &securityContext
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      capabilities:
        drop:
          - ALL

    image:
      repository: quay.io/enix/kube-image-keeper
    webhook:
      ignoredNamespaces:
        - kube-system
      ignoredImages:
        # cloudnative-pg images prepended with localhost are failing version check, causing
        # postgres pods been constantly killed by operator, as it's confused and thinks
        # that it's old version
        - ".*cloudnative-pg/postgresql.*"
        - "registry.<path:kubernetes/data/internal/base#ROOT_DOMAIN>/.*"
    podMonitor:
      create: true

  proxy:
    image:
      repository: quay.io/enix/kube-image-keeper
    podMonitor:
      create: true
    podAnnotations:
      kyverno.io/ignore: "podsecurity-subrule-baseline"
    podSecurityContext: *podSecurityContext
    securityContext: *securityContext

  registry:
    image:
      repository: public.ecr.aws/docker/library/registry
    podAnnotations:
      reloader.stakater.com/auto: "true"
    podSecurityContext:
      <<: *podSecurityContext
      runAsUser: 65000
      runAsGroup: 65000
    securityContext:
      <<: *securityContext
      runAsUser: 65000
      runAsGroup: 65000
    persistence:
      s3:
        region: "<path:kubernetes/data/internal/base#S3_REGION>"
        regionendpoint: "<path:kubernetes/data/internal/base#S3_URL>"
        bucket: "<path:kubernetes/data/internal/kube-image-keeper#S3_BUCKET>"
        encrypt: false
        secure: false
        v4auth: true
      s3ExistingSecret: kube-image-keeper-secret
    garbageCollection:
      # cronjob from helm uses docker.io image, disable it and use our own with proper one
      schedule: ""
