---
# yaml-language-server: $schema=https://deedee-ops.github.io/schemas/kyverno.io/policy_v1.json
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: kube-image-keeper-proxy
spec:
  mutateExistingOnPolicyUpdate: true
  rules:
    - name: add-labels
      match:
        any:
          - resources:
              kinds:
                - DaemonSet
              names:
                - kube-image-keeper-proxy
      mutate:
        targets:
          - apiVersion: apps/v1
            kind: DaemonSet
            preconditions:
              all:
                - key: "{{`{{target.metadata.name}}`}}"
                  operator: Equals
                  value: kube-image-keeper-proxy
        patchesJson6902: |-
          # necessary for fetching images from external repositories
          - path: "/spec/template/metadata/labels/egress~1enabled"
            op: add
            value: "true"
          - path: "/spec/template/metadata/labels/kyverno.io~1ignore"
            op: add
            value: podsecurity-subrule-baseline
---
# yaml-language-server: $schema=https://deedee-ops.github.io/schemas/kyverno.io/policy_v1.json
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: kube-image-keeper-registry
spec:
  mutateExistingOnPolicyUpdate: true
  rules:
    - name: add-labels
      match:
        any:
          - resources:
              kinds:
                - Deployment
              names:
                - kube-image-keeper-registry
      mutate:
        targets:
          - apiVersion: apps/v1
            kind: Deployment
            preconditions:
              all:
                - key: "{{`{{target.metadata.name}}`}}"
                  operator: Equals
                  value: kube-image-keeper-registry
        patchesJson6902: |-
          # necessary for fetching images from external repositories
          - path: "/spec/template/metadata/labels/egress~1enabled"
            op: add
            value: "true"
---
# yaml-language-server: $schema=https://deedee-ops.github.io/schemas/kyverno.io/policy_v1.json
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: kube-image-keeper-controllers
spec:
  mutateExistingOnPolicyUpdate: true
  rules:
    - name: set-topology
      match:
        any:
          - resources:
              kinds:
                - Deployment
              names:
                - kube-image-keeper-controllers
      mutate:
        targets:
          - apiVersion: apps/v1
            kind: Deployment
            preconditions:
              all:
                - key: "{{`{{target.metadata.name}}`}}"
                  operator: Equals
                  value: kube-image-keeper-controllers
        patchStrategicMerge:
          spec:
            template:
              metadata:
                labels:
                  # necessary for fetching images from external repositories
                  egress/enabled: "true"
              spec:
                topologySpreadConstraints:
                  - maxSkew: 1
                    topologyKey: kubernetes.io/hostname
                    whenUnsatisfiable: DoNotSchedule
                    labelSelector:
                      matchLabels:
                        app.kubernetes.io/name: kube-image-keeper
                        app.kubernetes.io/component: controllers
---
# yaml-language-server: $schema=https://deedee-ops.github.io/schemas/kyverno.io/policy_v1.json
apiVersion: kyverno.io/v1
kind: Policy
metadata:
  name: kube-image-keeper-registry-garbage-collection
spec:
  mutateExistingOnPolicyUpdate: true
  rules:
    - name: set-cronjob-image
      match:
        any:
          - resources:
              kinds:
                - CronJob
              names:
                - kube-image-keeper-registry-garbage-collection
      mutate:
        targets:
          - apiVersion: batch/v1
            kind: CronJob
            preconditions:
              all:
                - key: "{{`{{target.metadata.name}}`}}"
                  operator: Equals
                  value: kube-image-keeper-registry-garbage-collection
        patchesJson6902: |-
          # necessary for fetching images from external repositories
          - path: "/spec/jobTemplate/spec/template/spec/containers/0/image"
            op: replace
            # renovate: datasource=docker depName=public.ecr.aws/bitnami/kubectl
            value: "public.ecr.aws/bitnami/kubectl:1.28.4"
