---
# yaml-language-server: $schema=https://deedee-ops.github.io/schemas/custom/bjw-s-apptemplate.json
app-template:
  defaultPodOptions:
    securityContext:
      fsGroup: 65000
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault

  controllers:
    syncthing:
      containers:
        app:
          image:
            repository: ghcr.io/deedee-ops/syncthing
            tag: 1.27.4
            pullPolicy: IfNotPresent

          env:
            TZ: Europe/Warsaw

          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL

          probes:
            startup: &probes
              enabled: true
              custom: true
              spec:
                failureThreshold: 30
                periodSeconds: 10
                httpGet:
                  path: /rest/noauth/health
                  port: 8384
            readiness: *probes
            liveness: *probes

          resources:
            requests:
              cpu: 10m
              memory: 32Mi
            limits:
              memory: 256Mi

  service:
    app:
      controller: syncthing
      ports:
        http:
          port: 8384
        sync:
          port: 22000

  ingress:
    syncthing:
      className: internal
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Apps
        gethomepage.dev/name: Syncthing
        gethomepage.dev/icon: syncthing.png
        gethomepage.dev/description: Continuous File Synchronization
      hosts:
        - host: "syncthing.<path:kubernetes/data/internal/base#ROOT_DOMAIN>"
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: app
                port: 8384
      tls:
        - hosts:
            - "syncthing.<path:kubernetes/data/internal/base#ROOT_DOMAIN>"

  persistence:
    config:
      type: persistentVolumeClaim
      existingClaim: syncthing-config
      globalMounts:
        - path: "/config"
    data:
      type: persistentVolumeClaim
      existingClaim: syncthing-data
      globalMounts:
        - path: "/data"
    external-paperless-consume:
      type: persistentVolumeClaim
      existingClaim: paperless-ngx-consume
      globalMounts:
        - path: "/external/consume"
    external-paperless-data:
      type: persistentVolumeClaim
      existingClaim: paperless-ngx-data
      globalMounts:
        - path: "/external/documents"
          subPath: "documents/archive"
          readOnly: true
    external-obsidian-assets:
      type: persistentVolumeClaim
      existingClaim: miniserve-data
      globalMounts:
        - path: "/external/obsidian-assets"
          subPath: "obsidian-assets"
