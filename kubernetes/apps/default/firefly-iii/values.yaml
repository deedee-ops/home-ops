---
# yaml-language-server: $schema=https://deedee-ops.github.io/schemas/custom/bjw-s-apptemplate.json
app-template:
  defaultPodOptions:
    securityContext:
      fsGroup: 65000
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault

  controllers:
    firefly-iii:
      annotations:
        reloader.stakater.com/auto: "true"

      containers:
        app:
          image:
            repository: ghcr.io/deedee-ops/firefly-iii
            tag: '6.1.19'
            pullPolicy: IfNotPresent
          env:
            APP_URL: "https://firefly.<path:kubernetes/data/internal/base#ROOT_DOMAIN>"
            AUTHENTICATION_GUARD: remote_user_guard
            AUTHENTICATION_GUARD_EMAIL: HTTP_REMOTE_EMAIL
            AUTHENTICATION_GUARD_HEADER: HTTP_REMOTE_EMAIL
            DB_CONNECTION: pgsql
            DB_PORT: 5432
            MAIL_ENCRYPTION: "null"
            MAIL_FROM: "<path:kubernetes/data/internal/base#MAIL_FROM_CLUSTER>"
            MAIL_MAILER: smtp
            MAIL_HOST: smtp-relay.networking.svc.cluster.local
            MAIL_PORT: 25
            SEND_TELEMETRY: "false"
            TRUSTED_PROXIES: "**"
            TZ: Europe/Warsaw

            CACHE_DRIVER: redis
            SESSION_DRIVER: redis
            REDIS_SCHEME: tcp
            REDIS_HOST: redis-ha-haproxy.database.svc.cluster.local
            REDIS_PORT: 6379

          securityContext: &securityContext
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL

          probes:
            startup: &probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /health
                  port: 8080
                failureThreshold: 30
                periodSeconds: 10
            readiness: *probes
            liveness: *probes

          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              memory: 1Gi

    cron:
      type: cronjob
      cronjob:
        schedule: "0 0 * * *"   # once a day
        successfulJobsHistory: 0
        failedJobsHistory: 5
      pod:
        securityContext:
          runAsUser: 100
          runAsGroup: 101
          fsGroup: 101
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
      containers:
        curl:
          image:
            repository: quay.io/curl/curl
            tag: 8.10.0
            pullPolicy: IfNotPresent
          command:
            - sh
          args:
            - '-c'
            - >
              /usr/bin/curl --silent --show-error --fail
              "http://firefly-iii.default.svc.cluster.local:8080/api/v1/cron/$(cat ${FIREFLY_III_TOKEN_FILE})"
          env:
            FIREFLY_III_TOKEN_FILE: /secrets/FIREFLY_III_TOKEN

          securityContext: *securityContext

          probes:
            readiness: &probes
              enabled: true
              custom: true
              spec:
                exec:
                  command:
                    - pgrep
                    - -f
                    - curl
                initialDelaySeconds: 5
                periodSeconds: 10
                failureThreshold: 3
            liveness: *probes

          resources:
            requests:
              cpu: 10m
              memory: 20Mi
            limits:
              memory: 50Mi

  service:
    app:
      controller: firefly-iii
      ports:
        http:
          port: 8080

  ingress:
    firefly-iii:
      className: internal
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Apps
        gethomepage.dev/name: Firefly
        gethomepage.dev/icon: firefly.png
        gethomepage.dev/description: Finances Management
      hosts:
        - host: "firefly.<path:kubernetes/data/internal/base#ROOT_DOMAIN>"
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: app
                port: 8080
      tls:
        - hosts:
            - "firefly.<path:kubernetes/data/internal/base#ROOT_DOMAIN>"

  persistence:
    config:
      type: emptyDir
      medium: Memory
      globalMounts:
        - path: /config

    secrets:
      type: custom
      volumeSpec:
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: firefly-iii
