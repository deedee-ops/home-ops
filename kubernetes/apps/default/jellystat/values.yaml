---
# yaml-language-server: $schema=https://deedee-ops.github.io/schemas/custom/bjw-s-apptemplate.json
app-template:
  defaultPodOptions:
    securityContext:
      runAsUser: 65000
      runAsGroup: 65000
      fsGroup: 65000
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault

  controllers:
    jellystat:
      containers:
        app:
          image:
            repository: ghcr.io/deedee-ops/jellystat-devel
            tag: "latest"
            pullPolicy: IfNotPresent

          env:
            POSTGRES_PORT: "5432"
            TZ: Europe/Warsaw

          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL

          probes:
            readiness: &probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /
                  port: 3000
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            liveness: *probes

          resources:
            requests:
              cpu: 10m
              memory: 100Mi
            limits:
              memory: 1000Mi

  service:
    app:
      controller: jellystat
      ports:
        http:
          port: 3000

  ingress:
    radarr:
      className: internal
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Media
        gethomepage.dev/name: Jellystat
        gethomepage.dev/icon: jellystat.png
        gethomepage.dev/description: Jellyfin statistics
      hosts:
        - host: "jellystat.<path:kubernetes/data/internal/base#ROOT_DOMAIN>"
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: app
                port: 3000
      tls:
        - hosts:
            - "jellystat.<path:kubernetes/data/internal/base#ROOT_DOMAIN>"

  persistence:
    secrets:
      type: custom
      volumeSpec:
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: radarr
