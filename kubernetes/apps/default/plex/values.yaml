---
# yaml-language-server: $schema=https://deedee-ops.github.io/schemas/custom/bjw-s-apptemplate.json
app-template:
  defaultPodOptions:
    securityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault

  controllers:
    plex:
      annotations:
        reloader.stakater.com/auto: "true"

      pod:
        nodeSelector:
          intel.feature.node.kubernetes.io/gpu: "true"

      containers:
        app:
          image:
            repository: ghcr.io/onedr0p/plex
            tag: 1.40.5.8921-836b34c27@sha256:1a37af82a728ecc28cdcddf54c2fc5aafb01def5f5982c297e1854de9cc5eb56
            pullPolicy: IfNotPresent

          env:
            PLEX_ADVERTISE_URL: https://plex.<path:kubernetes/data/internal/base#ROOT_DOMAIN>:443,http://<path:kubernetes/data/internal/plex#IP_IOT>:32400
            # PLEX_NO_AUTH_NETWORKS:
            # "172.16.0.0/12,<path:kubernetes/data/internal/base#CIDR_TRUSTED>,<path:kubernetes/data/internal/base#CIDR_IOT>"
            # PLEX_NO_AUTH_NETWORKS: "172.16.0.0/12,<path:kubernetes/data/internal/base#CIDR_TRUSTED>"
            # PLEX_NO_AUTH_NETWORKS: "0.0.0.0/0"
            TZ: Europe/Warsaw

          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL

          probes:
            readiness: &probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /identity
                  port: 32400
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            liveness: *probes
            startup:
              enabled: false
              spec:
                failureThreshold: 30
                periodSeconds: 10

          resources:
            requests:
              cpu: 100m
              memory: 1Gi
              gpu.intel.com/i915: 1
            limits:
              memory: 16Gi
              gpu.intel.com/i915: 1

  service:
    app:
      controller: plex
      type: LoadBalancer
      annotations:
        io.cilium/lb-ipam-ips: "<path:kubernetes/data/internal/plex#IP_IOT>"
      ports:
        http:
          port: 32400

  ingress:
    plex:
      className: internal
      annotations:
        nginx.ingress.kubernetes.io/enable-global-auth: "false"
        nginx.ingress.kubernetes.io/configuration-snippet: 'more_clear_headers "Content-Security-Policy";'
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Media
        gethomepage.dev/name: Plex
        gethomepage.dev/icon: plex.png
        gethomepage.dev/description: Media Server
      hosts:
        - host: "plex.<path:kubernetes/data/internal/base#ROOT_DOMAIN>"
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: app
                port: 32400
      tls:
        - hosts:
            - "plex.<path:kubernetes/data/internal/base#ROOT_DOMAIN>"

  persistence:
    config:
      type: persistentVolumeClaim
      existingClaim: plex-config
      globalMounts:
        - path: /config/Library/Application Support/Plex Media Server

    cache:
      type: persistentVolumeClaim
      storageClass: local-path
      size: 75Gi
      accessMode: ReadWriteOnce
      globalMounts:
        - path: /config/Library/Application Support/Plex Media Server/Cache

    logs:
      type: emptyDir
      globalMounts:
        - path: /config/Library/Application Support/Plex Media Server/Logs

    transcode:
      type: persistentVolumeClaim
      storageClass: local-path
      size: 60Gi
      accessMode: ReadWriteOnce

    tmp:
      type: emptyDir

    video:
      type: persistentVolumeClaim
      existingClaim: plex-video
      globalMounts:
        - path: /media
          readOnly: true
