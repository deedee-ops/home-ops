---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: grafana-admin
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: bitwarden-secretsmanager
  target:
    name: grafana-admin-secret
    template:
      data:
        admin-user: "{{`{{ .GRAFANA_ADMIN_USERNAME }}`}}"
        admin-password: "{{`{{ .GRAFANA_ADMIN_PASSWORD }}`}}"
  data:
    - secretKey: GRAFANA_ADMIN_USERNAME
      remoteRef:
        key: GRAFANA_ADMIN_USERNAME
    - secretKey: GRAFANA_ADMIN_PASSWORD
      remoteRef:
        key: GRAFANA_ADMIN_PASSWORD
---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: grafana-oidc
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: bitwarden-secretsmanager
  target:
    name: grafana-oidc-secret
    template:
      data:
        GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
        GF_AUTH_GENERIC_OAUTH_NAME: "Authelia"
        GF_AUTH_GENERIC_OAUTH_ICON: "signin"
        GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "{{`{{ .GRAFANA_OIDC_CLIENT_ID }}`}}"
        GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "{{`{{ .GRAFANA_OIDC_CLIENT_SECRET }}`}}"
        GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email groups"
        GF_AUTH_GENERIC_OAUTH_EMPTY_SCOPES: "false"
        GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://auth.{{ .Values.global.rootDomain }}/api/oidc/authorization"
        GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://auth.{{ .Values.global.rootDomain }}/api/oidc/token"
        GF_AUTH_GENERIC_OAUTH_API_URL: "https://auth.{{ .Values.global.rootDomain }}/api/oidc/userinfo"
        GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH: "preferred_username"
        GF_AUTH_GENERIC_OAUTH_GROUPS_ATTRIBUTE_PATH: "groups"
        GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH: "name"
        GF_AUTH_GENERIC_OAUTH_USE_PKCE: "true"
        GF_AUTH_GENERIC_OAUTH_AUTO_LOGIN: "true"
        GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: >-
          contains(groups[*], 'admins') && 'Admin' || contains(groups[*], 'editors') && 'Editor' || 'Viewer'
  data:
    - secretKey: GRAFANA_OIDC_CLIENT_ID
      remoteRef:
        key: GRAFANA_OIDC_CLIENT_ID
    - secretKey: GRAFANA_OIDC_CLIENT_SECRET
      remoteRef:
        key: GRAFANA_OIDC_CLIENT_SECRET
---
# yaml-language-server: $schema=https://datreeio.github.io/CRDs-catalog/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: grafana-authelia
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: bitwarden-secretsmanager
  target:
    name: grafana-authelia-secret
    template:
      metadata:
        labels:
          authelia.com/oidc-config: "true"
      data:
        grafana.yaml: |
          client_id: "{{`{{ .GRAFANA_OIDC_CLIENT_ID }}`}}"
          client_name: Grafana
          # docker run authelia/authelia:latest authelia crypto hash generate pbkdf2 --variant sha512
          # --random --random.length 72 --random.charset rfc3986
          client_secret: "{{`{{ .GRAFANA_OIDC_CLIENT_SECRET_ENCRYPTED }}`}}"
          claims_policy: broken_oidc
          consent_mode: implicit
          public: false
          authorization_policy: two_factor
          require_pkce: true
          pkce_challenge_method: S256
          redirect_uris:
            - https://grafana.{{ .Values.global.rootDomain }}/login/generic_oauth
          scopes:
            - openid
            - groups
            - email
            - profile
          userinfo_signed_response_alg: none
          token_endpoint_auth_method: client_secret_basic
  data:
    - secretKey: GRAFANA_OIDC_CLIENT_ID
      remoteRef:
        key: GRAFANA_OIDC_CLIENT_ID
    - secretKey: GRAFANA_OIDC_CLIENT_SECRET_ENCRYPTED
      remoteRef:
        key: GRAFANA_OIDC_CLIENT_SECRET_ENCRYPTED
