---
# yamllint disable rule:line-length
# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
# yamllint enable rule:line-length
clusterName: &cluster meemee

clusterPodNets:
  - 172.30.0.0/16
clusterSvcNets:
  - 172.31.0.0/16

endpoint: https://${clusterEndpointIP}:6443

# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: v1.6.1

# renovate: datasource=docker depName=ghcr.io/siderolabs/kubelet
kubernetesVersion: v1.29.0

additionalApiServerCertSans:
  - ${clusterEndpointIP}

additionalMachineCertSans:
  - ${clusterEndpointIP}

nodes:
  - hostname: meemee
    ipAddress: 10.100.25.10
    installDiskSelector:
      size: "<= 150GB"
    controlPlane: true
    disableSearchDomain: true
    networkInterfaces:
      - deviceSelector:
          hardwareAddr: 00:00:0a:64:19:0a
        addresses:
          - 10.100.25.10/16
        routes:
          - network: 0.0.0.0/0
            gateway: 10.100.1.1
        dhcp: false
        vip:
          ip: ${clusterEndpointIP}
    nameservers:
      - 10.100.1.1
    nodeLabels: &masterLabels
      topology.kubernetes.io/region: *cluster
      topology.kubernetes.io/zone: master

controlPlane:
  patches:
    # Configure NTP
    - |-
      machine:
        time:
          disabled: false
          servers:
            - time.cloudflare.com

    # Enable cluster discovery
    - |-
      cluster:
        discovery:
          registries:
            kubernetes:
              disabled: false
            service:
              disabled: true

    # Enable KubePrism
    - |-
      machine:
        features:
          kubePrism:
            enabled: true
            port: 7445

    # Configure kubelet
    - |-
      machine:
        kubelet:
          extraArgs:
            feature-gates: GracefulNodeShutdown=true
            rotate-server-certificates: true

    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnMasters: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - kube-system

    - |-
      cluster:
        inlineManifests:
          - name: cert-manager-secret
            contents: |
              ---
              apiVersion: v1
              kind: Namespace
              metadata:
                labels:
                  kubernetes.io/metadata.name: cert-manager
                name: cert-manager
              ---
              apiVersion: v1
              kind: Secret
              type: Opaque
              metadata:
                name: cloudflare-secret
                namespace: cert-manager
              stringData:
                CLOUDFLARE_API_TOKEN: "${cloudflareApiToken}"
